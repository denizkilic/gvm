// Code generated by MockGen. DO NOT EDIT.
// Source: list.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLister is a mock of Lister interface
type MockLister struct {
	ctrl     *gomock.Controller
	recorder *MockListerMockRecorder
}

// MockListerMockRecorder is the mock recorder for MockLister
type MockListerMockRecorder struct {
	mock *MockLister
}

// NewMockLister creates a new mock instance
func NewMockLister(ctrl *gomock.Controller) *MockLister {
	mock := &MockLister{ctrl: ctrl}
	mock.recorder = &MockListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLister) EXPECT() *MockListerMockRecorder {
	return m.recorder
}

// ListGoPackageVersions mocks base method
func (m *MockLister) ListGoPackageVersions() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGoPackageVersions")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGoPackageVersions indicates an expected call of ListGoPackageVersions
func (mr *MockListerMockRecorder) ListGoPackageVersions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGoPackageVersions", reflect.TypeOf((*MockLister)(nil).ListGoPackageVersions))
}
