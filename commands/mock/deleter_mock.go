// Code generated by MockGen. DO NOT EDIT.
// Source: delete.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDeleter is a mock of Deleter interface
type MockDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDeleterMockRecorder
}

// MockDeleterMockRecorder is the mock recorder for MockDeleter
type MockDeleterMockRecorder struct {
	mock *MockDeleter
}

// NewMockDeleter creates a new mock instance
func NewMockDeleter(ctrl *gomock.Controller) *MockDeleter {
	mock := &MockDeleter{ctrl: ctrl}
	mock.recorder = &MockDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeleter) EXPECT() *MockDeleterMockRecorder {
	return m.recorder
}

// DeleteGoPackage mocks base method
func (m *MockDeleter) DeleteGoPackage(version string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGoPackage", version)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGoPackage indicates an expected call of DeleteGoPackage
func (mr *MockDeleterMockRecorder) DeleteGoPackage(version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGoPackage", reflect.TypeOf((*MockDeleter)(nil).DeleteGoPackage), version)
}
